{"ast":null,"code":"var _jsxFileName = \"/home/simmi/create-react-app-example/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getLocation = async () => {\n      const apilocationcall = await fetch(\"https://api.db-ip.com/v2/free/self\");\n      const data = await apilocationcall.json();\n      console.log(data.city, data.stateProv, data.countryName);\n      this.setState({\n        city: data.city,\n        state: data.stateProv,\n        country: data.countryName\n      });\n      const apicall = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n      const wdata = await apicall.json();\n      console.log(wdata);\n\n      if (wdata.message === 'city not found') {\n        this.setState({\n          city: '',\n          state: '',\n          country: ''\n        });\n      }\n    };\n\n    this.getWeather = async e => {\n      this.setState({\n        city: e.target.elements.city.value,\n        state: e.target.elements.state.value,\n        country: e.target.elements.country.value\n      });\n      const apicall = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.state},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n      const data = await apicall.json();\n      console.log(data);\n\n      if (data.message === 'city not found') {\n        this.setState({\n          city: '',\n          state: '',\n          country: ''\n        });\n      }\n    };\n\n    this.state = {\n      city: '',\n      state: '',\n      country: '',\n      error: '',\n      flag: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  render() {\n    var {\n      city,\n      state,\n      country\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Weather App\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"You are in \", city, \", \", state, \", \", country, \"!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.city,\n      placeholder: \"Enter city\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"state\",\n      value: this.state.state,\n      placeholder: \"Enter state\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"country\",\n      value: this.state.country,\n      placeholder: \"Enter country\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Get Weather\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/simmi/create-react-app-example/src/App.js"],"names":["React","Component","App","constructor","getLocation","apilocationcall","fetch","data","json","console","log","city","stateProv","countryName","setState","state","country","apicall","wdata","message","getWeather","e","target","elements","value","error","flag","handleChange","bind","name","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: '',\n      state:'',\n      country: '',\n      error:'',\n      flag:0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleChange(e){\n    this.setState({[e.target.name]: e.target.value});}\n  \n    getLocation=async()=>{\n      const apilocationcall=await fetch(\"https://api.db-ip.com/v2/free/self\");\n     const data=await apilocationcall.json();\n     console.log(data.city, data.stateProv, data.countryName);\n     this.setState(\n       {city:data.city,\n       state:data.stateProv,\n       country:data.countryName}\n     );\n    const apicall=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n    const wdata= await apicall.json();\n    console.log(wdata);\n    if(wdata.message==='city not found'){\n      this.setState({\n        city:'',\n        state:'',\n        country:''\n      })\n    }}\n\n  getWeather= async(e)=>{\n    this.setState({\n      city:e.target.elements.city.value,\n      state:e.target.elements.state.value,\n      country:e.target.elements.country.value\n    })\n    const apicall=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.state},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n    const data= await apicall.json();\n    console.log(data);\n    if(data.message==='city not found'){\n      this.setState({\n        city:'',\n        state:'',\n        country:''\n      })\n    }\n  }\n\n  componentDidMount(){\n    this.getLocation();\n  }\n\n  render() {\n    var {city,state,country}=this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h2>Weather App</h2>\n        </header>\n        <h3>You are in {city}, {state}, {country}!</h3>\n          <div>\n            <form onSubmit={this.getWeather}>\n              <label htmlFor=\"city\">City</label>\n              <input type=\"text\" name=\"city\" value={this.state.city} placeholder=\"Enter city\" onChange={this.handleChange}/>\n              <label htmlFor=\"state\">State</label>\n              <input type=\"text\" name=\"state\" value={this.state.state} placeholder=\"Enter state\" onChange={this.handleChange}/>\n              <label htmlFor=\"country\">Country</label>\n              <input type=\"text\" name=\"country\" value={this.state.country} placeholder=\"Enter country\" onChange={this.handleChange}/>\n              <button type=\"submit\">Get Weather</button>\n            </form>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}