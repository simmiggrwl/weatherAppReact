{"version":3,"sources":["components/Home.js","pages/HomePage.jsx","components/Info.js","pages/InfoPage.jsx","containers/RouteViews.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["Home","getWeather","e","a","preventDefault","setState","city","target","elements","value","country","weather","fetch","state","apicall","json","data","console","log","message","temp","maxtemp","mintemp","humidity","pressure","description","windspeed","time","handleChange","bind","getData","handleSubmit","this","name","window","location","href","number","list","main","temp_max","temp_min","wind","speed","dt_txt","days","day","Date","getDay","className","onSubmit","id","htmlFor","type","placeholder","onChange","onClick","style","whiteSpace","overflow","Component","HomePage","props","Info","info","getInfo","pathArray","pathname","split","weatherinfo","map","i","color","InfoPage","RouteViews","exact","path","element","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.159a95e7.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport \"../App.css\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      city: '',\n      country: '',\n      weather:0,\n      temp:0,\n      maxtemp:0,\n      mintemp:0,\n      humidity:0,\n      pressure:0,\n      description:'',\n      windspeed:0,\n      time:''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getWeather=this.getWeather.bind(this);\n    this.getData=this.getData.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n  \n  handleChange(e){\n    this.setState({[e.target.name]: e.target.value});}\n\n  handleSubmit(e){\n    e.preventDefault();\n    console.log('hi');\n    const {city,country}=this.state;\n    window.location.href=`/info/${city}/${country}`;\n  }\n\n  getWeather= async(e)=>{\n    e.preventDefault();\n    this.setState({\n      city:e.target.elements.city.value,\n      country:e.target.elements.country.value,\n      weather:1\n    })\n    const apicall=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n    const data= await apicall.json();\n    console.log(data);\n    if(data.message==='city not found'){\n      this.setState({\n        city:'',\n        country:'',\n        weather:0\n      })\n    }\n  }\n\n  async getData(number){\n    const apicall=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${this.state.city},${this.state.country}&appid=1db31d64a574b28b83f890456cee97ce`);\n    const data= await apicall.json();\n    this.setState({\n      temp: data.list[number].main.temp,\n      maxtemp: data.list[number].main.temp_max,\n      mintemp: data.list[number].main.temp_min,\n      humidity: data.list[number].main.humidity,\n      pressure:data.list[number].main.pressure,\n      description:data.list[number].weather[0].description,\n      windspeed:data.list[number].wind.speed,\n      time:data.list[number].dt_txt\n    })\n    console.log(this.state.time);\n  }\n\n  render() {\n    var days=[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\"];\n    var today=new Date();\n    var day=today.getDay();\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Weather App</h1>\n        </header>\n            <form onSubmit={this.getWeather} id=\"form\">\n              <label htmlFor=\"city\">City</label>\n              <input type=\"text\" name=\"city\" value={this.state.city} placeholder=\"Enter city\" onChange={this.handleChange}/>\n              <label htmlFor=\"country\">Country</label>\n              <input type=\"text\" name=\"country\" value={this.state.country} placeholder=\"Enter country\" onChange={this.handleChange}/>\n              <button type=\"submit\" className=\"formbutton\">Get Weather</button>\n            </form>\n            {this.state.weather===1 && (\n              <div className=\"buttons\">\n              <button className=\"button\" onClick={()=>this.getData(0)}>{days[day]}</button>\n              <button className=\"button\" onClick={()=>this.getData(8)}>{days[day+1]}</button>\n              <button className=\"button\" onClick={()=>this.getData(16)}>{days[day+2]}</button>\n              <button className=\"button\" onClick={()=>this.getData(24)}>{days[day+3]}</button>\n              <button className=\"button\" onClick={()=>this.getData(32)}>{days[day+4]}</button>\n              </div>\n            )}\n          {this.state.temp!==0 && (<div className=\"info\"><div className=\"tablediv\">\n            <table id=\"table\">\n              <tbody>\n              <caption style={{whiteSpace: \"nowrap\", overflow:\"hidden\"}}>*this data is for {this.state.time}. For more accurate data, click on More Information.</caption>\n              <tr><th>Parameter</th><th>Value</th></tr>\n              <tr><td>Temperature</td><td>{this.state.temp}</td></tr>\n              <tr><td>Maximum Temperature</td><td>{this.state.maxtemp}</td></tr>\n              <tr><td>Minimum Temperature</td><td>{this.state.mintemp}</td></tr>\n              <tr><td>Humidity</td><td>{this.state.humidity}</td></tr>\n              <tr><td>Pressure</td><td>{this.state.pressure}</td></tr>\n              <tr><td>Wind Speed</td><td>{this.state.windspeed}</td></tr>\n              <tr><td>Description</td><td>{this.state.description}</td></tr>\n              </tbody>\n            </table>\n          </div>\n            {/* <p className=\"belowtable\">*this data is for {this.state.time}</p> */}\n            <button className=\"button\" onClick={this.handleSubmit}>More Information</button>\n          </div>)}\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Home from '../components/Home';\n\nconst HomePage= props => (\n    <div>\n        <Home/>\n    </div>\n);\n\nexport default HomePage;","import React, {Component} from \"react\";\nimport \"../App.css\";\n\nclass Info extends Component {\n  constructor() {\n    super();\n    this.state={\n        info:[],\n    }\n    this.getInfo=this.getInfo.bind(this);\n  }\n\n  async getInfo(){\n    var pathArray = window.location.pathname.split('/');\n    var city=pathArray[2];\n    var country=pathArray[3];\n    const apicall=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=1db31d64a574b28b83f890456cee97ce`);\n    const data= await apicall.json();\n    console.log(data.list);\n    if(data) {this.setState({info:data.list});}\n    console.log(\"yo\");\n    console.log(this.state.info);\n}\n\ncomponentDidMount() {\n    this.getInfo();\n  }\n\nrender() {\n    const {info}=this.state;\n    var pathArray = window.location.pathname.split('/');\n    var city=pathArray[2];\n    var country=pathArray[3];\n    const weatherinfo = info?.map(i => {\n        console.log('hi');\n        return(<div className=\"tableinfo\">\n            <table id=\"table\"><tbody>\n            <caption className=\"infocaption\">{i.dt_txt}</caption>\n            <tr><th>Parameter</th><th>Value</th></tr>\n              <tr><td>Temperature</td><td>{i.main.temp}</td></tr>\n              <tr><td>Maximum Temperature</td><td>{i.main.temp_max}</td></tr>\n              <tr><td>Minimum Temperature</td><td>{i.main.temp_min}</td></tr>\n              <tr><td>Humidity</td><td>{i.main.humidity}</td></tr>\n              <tr><td>Pressure</td><td>{i.main.pressure}</td></tr>\n              <tr><td>Wind Speed</td><td>{i.wind.speed}</td></tr>\n              <tr><td>Description</td><td>{i.weather[0].description}</td></tr>\n              </tbody></table></div>\n        )\n    });\n    return (\n        <div>\n        <header className=\"App-header\">\n          <h1 style={{color:\"white\"}}>5 Day Weather Forecast For {city}, {country}</h1>\n        </header>\n          {weatherinfo}\n      </div>\n    );\n  }\n}\n\nexport default Info;","import React from 'react';\nimport Info from '../components/Info';\n\nconst InfoPage= props => (\n    <div>\n        <Info />\n    </div>\n);\n\nexport default InfoPage;","import React from 'react';\nimport {Routes, Route} from 'react-router-dom'\nimport HomePage from '../pages/HomePage';\nimport InfoPage from '../pages/InfoPage';\n\nconst RouteViews = () => (<main>\n    <Routes>\n        <Route exact path=\"/\" element={<HomePage/>} />\n        <Route exact path=\"/info/:city/:country\" element={<InfoPage/>}/>\n    </Routes>\n</main>\n);\n\nexport default RouteViews;","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteViews from './RouteViews';\n\nconst App = () => (\n    <Router>\n      <Fragment>\n        <RouteViews />\n      </Fragment>\n    </Router>\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nrender(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}